# CS3100- Operating-Systems Priority Scheduler Part II
In this assignment, we modified the round robin scheduler in xv6 to a priority based scheduler.

Lili Peng

Files that are changed for the implementation of priority based scheduler:
	
	
	syscall.c
	-	Define required syscall functions:
		o	sys_nice(void)
		o	sys_getpriority(void)
		o	sys_setpriority(void)
	-	put the new syscalls in the syscall array
	
	syscall.h
	-	Set the syscall numbers:
		o	#define SYS_nice   22
		o	#define SYS_getpriority 23
		o	#define SYS_setpriority 24
	
	sysproc.c
	-	Implement system calls for nice, getpriority, and setpriority 
		o	int sys_nice(void)
		o	int sys_getpriority(void)
		o	int sys_setpriority(void)
	
	user.h 
	-	Define syscall functions
		o	int nice (int incr);
		o	int getpriority(int pid);
		o	int setpriority(int pid, int new_priority);
	
	proc.h
	-	Add a priority attribute for the proc struct

	proc.c
	-	Implements the priority based scheduler
		o	Initialize a process's priority in allocproc(void) method
		o	Implement logic for the priority based scheduler in the scheduler(void) method
		o	Make the child process inherits the parent's priority in fork(void) method
			
